template: true
valuesFilePath: ../values/gitRepoValues.yml

resources:
  - name: S_LX_HBGDeploy_5978_0005_BuildInfo_resource
    type: BuildInfo
    configuration:
      sourceArtifactory: s_artifactory
      buildName: helmbuild
      buildNumber: 1

  - name: S_LX_HBGDeploy_5978_0005_GitRepo_resource
    type: GitRepo
    configuration:
      gitProvider: s_gitHub
      path: {{ .Values.GitHub.Org_test_Automation.path }}
      branches:
        include: master

  - name: S_LX_HBGDeploy_5978_0005_ReleaseBundle_resource
    type: ReleaseBundle
    configuration:
      sourceDistribution: s_distribution
      name: name
      version: '1'

pipelines:
  - name: S_LX_HBGDeploy_5978_0005
    configuration:
      environmentVariables:
        readOnly:
          blue_release_name: "blue-hbgdeploy-5-${run_id}"
          green_release_name: "green-hbgdeploy-5-${run_id}"
          idle_name: "idle-hbgdeploy-5-${run_id}"
          live_name: "live-hbgdeploy-5-${run_id}"
          k8s_namespace: "pipe-master-pool"
          JFROG_CLI_BUILD_NAME: hbgdeploy-5
          JFROG_CLI_BUILD_NUMBER: ${run_id}
    steps:
      - name: S_LX_HBGDeploy_5978_0005_1
        type: Bash
        configuration:
          integrations:
            - name: s_artifactory
          inputResources:
            - name: S_LX_HBGDeploy_5978_0005_GitRepo_resource
          outputResources:
            - name: S_LX_HBGDeploy_5978_0005_BuildInfo_resource
        execution:
          onExecute:
            - request='{"key":"helmgeneric", "rclass":"local", "packageType":"generic", "description":"This repo is a test repo used by test automation", "repoLayoutRef":"simple-default"}'
            - echo $request > request.json
            - jfrog rt repo-delete helmgeneric || true
            - jfrog rt repo-create request.json
            - jfrog rt u ${res_S_LX_HBGDeploy_5978_0005_GitRepo_resource_resourcePath}/tests/core/helmbluegreen/simplehelm-0.3.0.tgz "helmgeneric/" --explode
            - jfrog rt bce $JFROG_CLI_BUILD_NAME $JFROG_CLI_BUILD_NUMBER
            - jfrog rt bp $JFROG_CLI_BUILD_NAME $JFROG_CLI_BUILD_NUMBER
            - write_output S_LX_HBGDeploy_5978_0005_BuildInfo_resource buildName=$JFROG_CLI_BUILD_NAME buildNumber=$JFROG_CLI_BUILD_NUMBER
          onFailure:
            - jfrog rt repo-delete helmgeneric

      - name: S_LX_HBGDeploy_5978_0005_2
        type: CreateReleaseBundle
        configuration:
          releaseBundleName: helmbuild_bundle_generic
          releaseBundleVersion: ${run_id}
          dryRun: false
          sign: true
          inputResources:
            - name: S_LX_HBGDeploy_5978_0005_BuildInfo_resource
          outputResources:
            - name: S_LX_HBGDeploy_5978_0005_ReleaseBundle_resource

      - name: S_LX_HBGDeploy_5978_0005_3
        type: HelmBlueGreenDeploy
        configuration:
          integrations:
            - name: s_artifactory
            - name: s_kubernetes
          inputResources:
            - name: S_LX_HBGDeploy_5978_0005_ReleaseBundle_resource
          chartPath: helmgeneric/simplehelm
          namespace: ${k8s_namespace}
          blueReleaseName: ${blue_release_name}
          greenReleaseName: ${green_release_name}
          roleServices:
            - blueReferenceName: ${blue_release_name}-simplehelm
              greenReferenceName: ${green_release_name}-simplehelm
              idleName: ${idle_name}
              liveName: ${live_name}
        execution:
          onSuccess:
            - helm3 status ${blue_release_name}
            - kubectl get service ${idle_name}
          onComplete:
            - echo "Deleting distribution..."
            - distributionUrl="$res_S_LX_HBGDeploy_5978_0005_ReleaseBundle_resource_sourceDistribution_url"
            - releaseBundleName=$(find_resource_variable S_LX_HBGDeploy_5978_0005_ReleaseBundle_resource name)
            - releaseBundleVersion=$(find_resource_variable S_LX_HBGDeploy_5978_0005_ReleaseBundle_resource version)
            - curlOptions="--silent --retry 3 -w %{http_code} -u $res_S_LX_HBGDeploy_5978_0005_ReleaseBundle_resource_sourceDistribution_user:$res_S_LX_HBGDeploy_5978_0005_ReleaseBundle_resource_sourceDistribution_apikey"
            - if [ "$no_verify_ssl" == "true" ]; then curlOptions+=" --insecure"; fi
            - "status=$(curl $curlOptions -XDELETE \"$distributionUrl/api/v1/release_bundle/$releaseBundleName/$releaseBundleVersion\")"
            - if [ $status -gt 299 ]; then return 1; fi
            - if [ $status -eq 204 ]; then echo "Deleted release bundle $releaseBundleName/$releaseBundleVersion successfully"; fi
            - echo "Deleting artifactory repository..."
            - jfrog rt repo-delete helmgeneric --quiet || true
            - echo "Deleting k8s resources..."
            - helm3 delete ${blue_release_name} --namespace ${k8s_namespace} || true
            - kubectl delete service ${idle_name} --namespace ${k8s_namespace} || true
